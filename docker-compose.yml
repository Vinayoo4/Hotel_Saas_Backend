version: '3.8'

services:
  app:
    build: .
    ports:
      - "8000:8000"
    environment:
      - ENVIRONMENT=production
      - DEBUG=false
      - DATABASE_URL=postgresql://hotel_user:hotel_password@db:5432/hotel_management
      - JWT_SECRET_KEY=your-super-secret-jwt-key-change-in-production
      - SECRET_KEY=your-super-secret-key-change-in-production
    volumes:
      - ./uploads:/app/uploads
      - ./ml_models:/app/ml_models
      - ./logs:/app/logs
      - ./backups:/app/backups
    depends_on:
      - db
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8000/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s

  db:
    image: postgres:15
    environment:
      - POSTGRES_DB=hotel_management
      - POSTGRES_USER=hotel_user
      - POSTGRES_PASSWORD=hotel_password
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./init.sql:/docker-entrypoint-initdb.d/init.sql
    ports:
      - "5432:5432"
    restart: unless-stopped
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U hotel_user -d hotel_management"]
      interval: 10s
      timeout: 5s
      retries: 5

  # Optional: Redis for caching and session storage
  # redis:
  #   image: redis:7-alpine
  #   ports:
  #     - "6379:6379"
  #   restart: unless-stopped
  #   healthcheck:
  #     test: ["CMD", "redis-cli", "ping"]
  #     interval: 10s
  #     timeout: 5s
  #     retries: 5

  # Optional: Nginx reverse proxy
  # nginx:
  #   image: nginx:alpine
  #   ports:
  #     - "80:80"
  #     - "443:443"
  #   volumes:
  #     - ./nginx.conf:/etc/nginx/nginx.conf
  #     - ./ssl:/etc/nginx/ssl
  #   depends_on:
  #     - app
  #   restart: unless-stopped

volumes:
  postgres_data:
